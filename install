#!/bin/bash

compose_path="/etc/docker_compose/"
if [ ! -x "$compose_path" ]; then
  mkdir -p $compose_path
fi
RABBITMQ_HOST=$1
RABBITMQ_USER=openstack
RABBITMQ_PASS=root
REGISTRY_URL=`curl -L -XGET http://127.0.0.1:2379/v2/keys/endpoints/registry/service|jq -r '.node.value'`
rabbitmq_cluster_image=$REGISTRY_URL"/docker.io/totem/rabbitmq-cluster:0.3.1"
cp openstack_rabbitmq_cluster_compose_template.yml $compose_path"openstack_rabbitmq_cluster_compose.yml"
sed -i "s#RABBITMQ_CLUSTER_IMAGE#$rabbitmq_cluster_image#g" $compose_path"openstack_rabbitmq_cluster_compose.yml"
sed -i "s#HOST_IP_VAR#$RABBITMQ_HOST#g" $compose_path"openstack_rabbitmq_cluster_compose.yml"
sed -i "s#RABBITMQ_USER_VAR#$RABBITMQ_USER#g" $compose_path"openstack_rabbitmq_cluster_compose.yml"
sed -i "s#RABBITMQ_PASS_VAR#$RABBITMQ_PASS#g" $compose_path"openstack_rabbitmq_cluster_compose.yml"
docker-compose -f $compose_path"openstack_rabbitmq_cluster_compose.yml" up -d
rabbitmq_container_id=`docker ps -a|grep rabbitmq|awk '{print $1}'`
while [ $rabbitmq_container_id == "" ]
do
  sleep 1
  rabbitmq_container_id=`docker ps -a|grep rabbitmq|awk '{print $1}'`
done
docker exec -it $rabbitmq_container_id rabbitmqctl set_permissions $RABBITMQ_USER ".*" ".*" ".*"
# save configuration of rabbit to etcd
#curl -L -XPUT http://127.0.0.1:2379/v2/keys/endpoints/rabbitmq/host -d value="$RABBITMQ_HOST"
